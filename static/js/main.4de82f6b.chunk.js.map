{"version":3,"sources":["components/AppHeader/index.jsx","components/SearchPannel/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/ItemStatusFilter/index.jsx","components/ItemAddForm/index.jsx","components/App/index.jsx","index.js"],"names":["AppHeader","toDo","done","className","SearchPannel","state","value","onSearchChange","e","text","target","setState","props","Input","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","Button","outline","color","TodoList","todos","elements","map","item","id","itemProps","ListGroupItem","key","ListGroup","ItemStatusFilter","buttons","name","clazz","filterValue","onFilterButtonClick","ButtonGroup","ItemAddForm","onInputChange","onAddItem","preventDefault","addItem","Form","onSubmit","FormGroup","App","maxId","createNewTodo","searchValue","deleteItem","filter","todo","newTodo","toggleProperty","property","array","oldItem","index","findIndex","modifiedItem","modifiedArray","splice","length","toLowerCase","includes","items","element","filteredTodos","search","totalDone","totalUndone","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4de82f6b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './appHeader.scss';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n    return (\r\n        <div className='appHeader'>\r\n            <h1>My todo list</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\nimport { Input } from 'reactstrap';\r\nimport './SearchPannel.scss';\r\n\r\nclass SearchPannel extends Component {\r\n   \r\n    state = {\r\n        value : ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const text = e.target.value;\r\n        this.setState({\r\n            value : text\r\n        })\r\n        this.props.onSearchChange(text);\r\n    }\r\n    render () {\r\n        return <Input className='searchInput' \r\n                      type=\"text\" \r\n                      placeholder=\"type to search\"\r\n                      value={this.state.value}\r\n                      onChange={this.onSearchChange}/>;\r\n    }\r\n}\r\n\r\nexport default SearchPannel;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './TodoListItem.scss';\r\n\r\n const TodoListItem = ({ label, onDeleted, onToggleImportant, onToggleDone, done, important }) => {\r\n\r\n        let classNames='';\r\n        if (done) {\r\n            classNames += 'done ';\r\n        }\r\n        if (important) {\r\n            classNames += 'impotant ';\r\n        }\r\n        return (\r\n            <span className='todoListItem'>\r\n                <span className={classNames} onClick={onToggleDone}>\r\n                    {label}\r\n                </span>\r\n                <Button onClick={onToggleImportant} outline color=\"success\">\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </Button>\r\n                <Button outline \r\n                color=\"danger\"\r\n                onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </Button>\r\n            </span>);\r\n}\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport TodoListItem from '../TodoListItem';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n        return (\r\n            <ListGroupItem key={ id }>\r\n                <TodoListItem\r\n                { ...itemProps }\r\n                onDeleted={()=>onDeleted(id)}\r\n                onToggleImportant={()=> onToggleImportant(id)}\r\n                onToggleDone={()=>onToggleDone(id)}/>\r\n            </ListGroupItem>\r\n        );\r\n    })\r\n\r\n   return (\r\n    <ListGroup className='listGroup'>\r\n        { elements }\r\n    </ListGroup>\r\n   );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\nimport './ItemStatusFilter.scss';\r\n\r\nclass ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n    {label: 'All', name: 'all'},\r\n    {label: 'Active', name: 'active'},\r\n    {label: 'Done', name: 'done'},\r\n ]\r\n   \r\n    render () { \r\n        const buttons = this.buttons.map(({label, name}) => {\r\n            const isActive = this.props.filterValue === name;\r\n            const clazz = isActive ? 'btn btn-info' : 'button';\r\n            return <Button key={name} className={clazz} onClick={()=>this.props.onFilterButtonClick(name)}>{label}</Button>\r\n     })\r\n        return (\r\n            <ButtonGroup>\r\n                {buttons}\r\n            </ButtonGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\r\nimport './ItemAddForm.scss';\r\n\r\n class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label : ''\r\n    }\r\n   \r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            label : e.target.value\r\n        })\r\n    }\r\n\r\n    onAddItem = (e) => {\r\n        e.preventDefault();\r\n        this.props.addItem(this.state.label);\r\n        this.setState({\r\n           label : ''\r\n        })\r\n    }\r\n    render () {\r\n        return (\r\n            <Form className='ItemAddForm' onSubmit={this.onAddItem}>\r\n                <FormGroup className='ItemAddForm__newTodoForm'>\r\n                    <Input  type=\"text\" \r\n                            placeholder=\"What else you need to do?\"\r\n                            onChange={this.onInputChange}\r\n                            value={this.state.label}/>\r\n                    <Button color=\"primary\">Add Todo</Button>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\nimport './app.scss';\r\nimport AppHeader from '../AppHeader';\r\nimport SearchPannel from '../SearchPannel';\r\nimport TodoList from '../TodoList';\r\nimport ItemStatusFilter from '../ItemStatusFilter';\r\nimport ItemAddForm from '../ItemAddForm';\r\n\r\nclass App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todos : [\r\n            this.createNewTodo('Learn JS'),\r\n            this.createNewTodo('Learn React'),\r\n            this.createNewTodo('Learn Angular'),\r\n        ],\r\n        searchValue : '',\r\n        filterValue: 'all',\r\n    };\r\n\r\n    createNewTodo (label) {\r\n        return {\r\n            label,\r\n            important : false,\r\n            id : this.maxId++,\r\n            done : false\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todos })=> {\r\n            const filteredTodos = todos.filter((todo)=> todo.id !== id);\r\n            return {\r\n                todos : filteredTodos\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n        const newTodo = this.createNewTodo(text);\r\n\r\n        this.setState(({ todos }) => {\r\n            const modifiedTodoList = [...todos, newTodo];\r\n            return {\r\n                todos : modifiedTodoList\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleProperty (property, array, id) {\r\n            let oldItem = array.filter((item)=> item.id === id)[0];\r\n            let index = array.findIndex((item)=>item.id === id);\r\n            let modifiedItem = {...oldItem, [property] : !oldItem[property]};\r\n            \r\n            let modifiedArray = [...array];\r\n            modifiedArray.splice(index,1,modifiedItem);\r\n            return modifiedArray\r\n\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todos }) => {\r\n            return {\r\n                todos : this.toggleProperty('important', todos, id)\r\n            }\r\n        });\r\n    }\r\n    \r\n    onToggleDone = (id) => {\r\n        this.setState(({ todos }) => {\r\n            return {\r\n                todos : this.toggleProperty('done', todos, id)\r\n            }\r\n        });\r\n    }\r\n\r\n    search (array, value) {\r\n        return value.length ? \r\n        array.filter((item) => item.label.toLowerCase().includes(value.toLowerCase())) \r\n        : \r\n        array;\r\n    }\r\n\r\n    filter (items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'done':\r\n                return items.filter((element) => element.done);\r\n            case 'active':\r\n                return items.filter((element) => !element.done);\r\n            default: return items;\r\n        }\r\n    }\r\n\r\n    onFilterButtonClick = (value) => {\r\n        this.setState({\r\n            filterValue : value\r\n        })\r\n    }\r\n\r\n    onSearchChange = (value) => {\r\n        this.setState({\r\n            searchValue : value\r\n        })\r\n    }\r\n   \r\n    render () {\r\n        const { todos, searchValue, filterValue } = this.state;\r\n        const filteredTodos = this.filter(this.search(todos, searchValue), filterValue);\r\n        const totalDone = todos.filter((todo) => todo.done).length;\r\n        const totalUndone = todos.length - totalDone;\r\n        return (\r\n            <div className='app'>\r\n                <AppHeader toDo={totalUndone} done={totalDone}/>\r\n                <div className='app__topPannel'>\r\n                <SearchPannel onSearchChange={this.onSearchChange}/>\r\n                <ItemStatusFilter onFilterButtonClick={this.onFilterButtonClick} filterValue={filterValue}/>\r\n                </div>\r\n                <TodoList \r\n                todos={filteredTodos} \r\n                onDeleted={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone}/>\r\n                <ItemAddForm addItem={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}